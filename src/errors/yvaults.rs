//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum YvaultsError {
    /// 6000 - Integer overflow
    #[error("Integer overflow")]
    IntegerOverflow = 0x1770,
    /// 6001 - Operation Forbidden
    #[error("Operation Forbidden")]
    OperationForbidden = 0x1771,
    /// 6002 - [DEPRECATED] Zero amount
    #[error("[DEPRECATED] Zero amount")]
    ZeroAmount = 0x1772,
    /// 6003 - Unable to deserialize account
    #[error("Unable to deserialize account")]
    UnableToDeserializeAccount = 0x1773,
    /// 6004 - [DEPRECATED] Vault balance does not match for token A
    #[error("[DEPRECATED] Vault balance does not match for token A")]
    VaultBalanceDoesNotMatchTokenA = 0x1774,
    /// 6005 - [DEPRECATED] Vault balance does not match for token B
    #[error("[DEPRECATED] Vault balance does not match for token B")]
    VaultBalanceDoesNotMatchTokenB = 0x1775,
    /// 6006 - [DEPRECATED] Shares issued amount does not match
    #[error("[DEPRECATED] Shares issued amount does not match")]
    SharesIssuedAmountDoesNotMatch = 0x1776,
    /// 6007 - Key is not present in global config
    #[error("Key is not present in global config")]
    GlobalConfigKeyError = 0x1777,
    /// 6008 - [DEPRECATED] System is in emergency mode
    #[error("[DEPRECATED] System is in emergency mode")]
    SystemInEmergencyMode = 0x1778,
    /// 6009 - Global deposit is currently blocked
    #[error("Global deposit is currently blocked")]
    GlobalDepositBlocked = 0x1779,
    /// 6010 - Global withdraw is currently blocked
    #[error("Global withdraw is currently blocked")]
    GlobalWithdrawBlocked = 0x177A,
    /// 6011 - Global invest is currently blocked
    #[error("Global invest is currently blocked")]
    GlobalInvestBlocked = 0x177B,
    /// 6012 - Out of range integral conversion attempted
    #[error("Out of range integral conversion attempted")]
    OutOfRangeIntegralConversion = 0x177C,
    /// 6013 - [DEPRECATED] Mathematical operation with overflow
    #[error("[DEPRECATED] Mathematical operation with overflow")]
    MathOverflow = 0x177D,
    /// 6014 - Unable to withdraw more liquidity than available in position
    #[error("Unable to withdraw more liquidity than available in position")]
    TooMuchLiquidityToWithdraw = 0x177E,
    /// 6015 - Deposit amounts must be greater than zero
    #[error("Deposit amounts must be greater than zero")]
    DepositAmountsZero = 0x177F,
    /// 6016 - Number of shares to withdraw must be greater than zero
    #[error("Number of shares to withdraw must be greater than zero")]
    SharesZero = 0x1780,
    /// 6017 - Strategy not active
    #[error("Strategy not active")]
    StrategyNotActive = 0x1781,
    /// 6018 - There are unharvested gains
    #[error("There are unharvested gains")]
    UnharvestedAmounts = 0x1782,
    /// 6019 - Reward mapping incorrect
    #[error("Reward mapping incorrect")]
    InvalidRewardMapping = 0x1783,
    /// 6020 - Reward index incorrect
    #[error("Reward index incorrect")]
    InvalidRewardIndex = 0x1784,
    /// 6021 - Cannot use uninitialized reward vault
    #[error("Cannot use uninitialized reward vault")]
    OwnRewardUninitialized = 0x1785,
    /// 6022 - Price is not valid
    #[error("Price is not valid")]
    PriceNotValid = 0x1786,
    /// 6023 - Must provide almost equal amounts of tokens
    #[error("Must provide almost equal amounts of tokens")]
    SwapRewardImbalanced = 0x1787,
    /// 6024 - Swap reward is zero or less than requested
    #[error("Swap reward is zero or less than requested")]
    SwapRewardTooSmall = 0x1788,
    /// 6025 - Swap reward is less than what user requested as minimum
    #[error("Swap reward is less than what user requested as minimum")]
    SwapRewardLessThanRequested = 0x1789,
    /// 6026 - Swap reward is less than minimum acceptable
    #[error("Swap reward is less than minimum acceptable")]
    SwapRewardLessThanMinimum = 0x178A,
    /// 6027 - Wrong discriminator
    #[error("Wrong discriminator")]
    WrongDiscriminator = 0x178B,
    /// 6028 - Wrong mint
    #[error("Wrong mint")]
    WrongMint = 0x178C,
    /// 6029 - Wrong vault
    #[error("Wrong vault")]
    WrongVault = 0x178D,
    /// 6030 - Swap amounts must be greater than zero
    #[error("Swap amounts must be greater than zero")]
    SwapAmountsZero = 0x178E,
    /// 6031 - Price too old
    #[error("Price too old")]
    PriceTooOld = 0x178F,
    /// 6032 - Cannot invest zero amount
    #[error("Cannot invest zero amount")]
    CannotInvestZeroAmount = 0x1790,
    /// 6033 - Cannot have zero investable amount
    #[error("Cannot have zero investable amount")]
    MaxInvestableZero = 0x1791,
    /// 6034 - Collect fees is blocked
    #[error("Collect fees is blocked")]
    CollectFeesBlocked = 0x1792,
    /// 6035 - Collect rewards is blocked
    #[error("Collect rewards is blocked")]
    CollectRewardsBlocked = 0x1793,
    /// 6036 - Swap rewards is blocked
    #[error("Swap rewards is blocked")]
    SwapRewardsBlocked = 0x1794,
    /// 6037 - Reward collateral ID is incorrect for strategy
    #[error("Reward collateral ID is incorrect for strategy")]
    WrongRewardCollateralID = 0x1795,
    /// 6038 - Position account doesn't match internal records
    #[error("Position account doesn't match internal records")]
    InvalidPositionAccount = 0x1796,
    /// 6039 - Scope account could not be deserialized
    #[error("Scope account could not be deserialized")]
    CouldNotDeserializeScope = 0x1797,
    /// 6040 - [DEPRECATED] Collateral ID invalid for strategy
    #[error("[DEPRECATED] Collateral ID invalid for strategy")]
    WrongCollateralID = 0x1798,
    /// 6041 - Collaterals exceed deposit cap
    #[error("Collaterals exceed deposit cap")]
    CollateralTokensExceedDepositCap = 0x1799,
    /// 6042 - Swap uneven vaults is blocked
    #[error("Swap uneven vaults is blocked")]
    SwapUnevenVaultsBlocked = 0x179A,
    /// 6043 - Cannot swap as vaults are already balanced
    #[error("Cannot swap as vaults are already balanced")]
    VaultsAreAlreadyBalanced = 0x179B,
    /// 6044 - Cannot swap uneven vaults when position is out of range
    #[error("Cannot swap uneven vaults when position is out of range")]
    CannotSwapUnevenOutOfRange = 0x179C,
    /// 6045 - Cannot divide by zero
    #[error("Cannot divide by zero")]
    DivideByZero = 0x179D,
    /// 6046 - [DEPRECATED] Delta A too large
    #[error("[DEPRECATED] Delta A too large")]
    DeltaATooLarge = 0x179E,
    /// 6047 - [DEPRECATED] Delta B too large
    #[error("[DEPRECATED] Delta B too large")]
    DeltaBTooLarge = 0x179F,
    /// 6048 - [DEPRECATED] Cannot executive withdraw zero amount
    #[error("[DEPRECATED] Cannot executive withdraw zero amount")]
    CannotExecutiveWithdrawZeroAmount = 0x17A0,
    /// 6049 - Cannot withdraw zero amount
    #[error("Cannot withdraw zero amount")]
    CannotWithdrawZeroAmount = 0x17A1,
    /// 6050 - [DEPRECATED] Cannot collect fees on zero liquidity position
    #[error("[DEPRECATED] Cannot collect fees on zero liquidity position")]
    CannotCollectFeesOnZeroLiquidityPosition = 0x17A2,
    /// 6051 - Cannot deposit inactive position
    #[error("Cannot deposit inactive position")]
    StrategyNotActiveWhenDepositing = 0x17A3,
    /// 6052 - Cannot open position with existing opened position
    #[error("Cannot open position with existing opened position")]
    StrategyNotActiveWhenOpeningPosition = 0x17A4,
    /// 6053 - Collaterals exceed deposit ixn cap
    #[error("Collaterals exceed deposit ixn cap")]
    CollateralTokensExceedDepositCapPerIxn = 0x17A5,
    /// 6054 - Cannot deposit when strategy out of range
    #[error("Cannot deposit when strategy out of range")]
    CannotDepositOutOfRange = 0x17A6,
    /// 6055 - Cannot invest when strategy out of range
    #[error("Cannot invest when strategy out of range")]
    CannotInvestOutOfRange = 0x17A7,
    /// 6056 - Withdrawal cap is reached
    #[error("Withdrawal cap is reached")]
    WithdrawalCapReached = 0x17A8,
    /// 6057 - Timestamp decrease
    #[error("Timestamp decrease")]
    TimestampDecrease = 0x17A9,
    /// 6058 - CPI not allowed
    #[error("CPI not allowed")]
    CPINotAllowed = 0x17AA,
    /// 6059 - Cannot use orca price as it is too different from scope price
    #[error("Cannot use orca price as it is too different from scope price")]
    OrcaPriceTooDifferentFromScope = 0x17AB,
    /// 6060 - Lower tick larger than upper tick
    #[error("Lower tick larger than upper tick")]
    LowerTickLargerThanUpperTick = 0x17AC,
    /// 6061 - Lower tick is lower than the minimal supported low tick
    #[error("Lower tick is lower than the minimal supported low tick")]
    LowerTickTooLow = 0x17AD,
    /// 6062 - Upper tick is larger than the maximum supported tick
    #[error("Upper tick is larger than the maximum supported tick")]
    UpperTickTooLarge = 0x17AE,
    /// 6063 - Lower tick is not a multiple of tick spacing
    #[error("Lower tick is not a multiple of tick spacing")]
    LowerTickNotMultipleOfTickSpacing = 0x17AF,
    /// 6064 - Upper tick is not a multiple of tick spacing
    #[error("Upper tick is not a multiple of tick spacing")]
    UpperTickNotMultipleOfTickSpacing = 0x17B0,
    /// 6065 - Cannot change admin authority
    #[error("Cannot change admin authority")]
    CannotChangeAdminAuthority = 0x17B1,
    /// 6066 - Cannot resize with smaller new size
    #[error("Cannot resize with smaller new size")]
    CannotResizeAccount = 0x17B2,
    /// 6067 - Scope chain update failed
    #[error("Scope chain update failed")]
    ScopeChainUpdateFailed = 0x17B3,
    /// 6068 - Price too divergent from twap
    #[error("Price too divergent from twap")]
    PriceTooDivergentFromTwap = 0x17B4,
    /// 6069 - [DEPRECATED] Can not override the existing reward
    #[error("[DEPRECATED] Can not override the existing reward")]
    ExistingRewardOverride = 0x17B5,
    /// 6070 - Kamino reward id exceeds the available slots
    #[error("Kamino reward id exceeds the available slots")]
    WrongKaminoRewardId = 0x17B6,
    /// 6071 - Kamino reward is not initialized
    #[error("Kamino reward is not initialized")]
    KaminoRewardNotExist = 0x17B7,
    /// 6072 - Kamino reward is already initialized
    #[error("Kamino reward is already initialized")]
    KaminoRewardAlreadyExists = 0x17B8,
    /// 6073 - Kamino collateral is not valid
    #[error("Kamino collateral is not valid")]
    KaminoCollateralNotValid = 0x17B9,
    /// 6074 - [DEPRECATED] Expected kamino reward is bigger then the available amount within the vault
    #[error("[DEPRECATED] Expected kamino reward is bigger then the available amount within the vault")]
    KaminoRewardExceedsAvailableAmount = 0x17BA,
    /// 6075 - Swap uneven vaults result in the opposite unbalance of the vaults
    #[error("Swap uneven vaults result in the opposite unbalance of the vaults")]
    SwapUnevenVaultsOvershoot = 0x17BB,
    /// 6076 - Bps parameter passed to instruction is not in range
    #[error("Bps parameter passed to instruction is not in range")]
    BpsNotInRange = 0x17BC,
    /// 6077 - Emergency Swap is blocked
    #[error("Emergency Swap is blocked")]
    EmergencySwapBlocked = 0x17BD,
    /// 6078 - Strategy is expected to be frozen for this operation
    #[error("Strategy is expected to be frozen for this operation")]
    StrategyNotFrozen = 0x17BE,
    /// 6079 - Token left in vault post swap are lower than expected
    #[error("Token left in vault post swap are lower than expected")]
    UnexpectedTokenAmountsPostSwap = 0x17BF,
    /// 6080 - Account doesn't belong to the DEX
    #[error("Account doesn't belong to the DEX")]
    AccountNotBelongToDEX = 0x17C0,
    /// 6081 - Wrong DEX program ID
    #[error("Wrong DEX program ID")]
    WrongDEXProgramID = 0x17C1,
    /// 6082 - Cannot use uninitialized orca reward vault
    #[error("Cannot use uninitialized orca reward vault")]
    OrcaRewardUninitialized = 0x17C2,
    /// 6083 - Invalid admin authority
    #[error("Invalid admin authority")]
    InvalidAdminAuthority = 0x17C3,
    /// 6084 - Token price is bigger than heuristic
    #[error("Token price is bigger than heuristic")]
    PriceIsBiggerThanHeuristic = 0x17C4,
    /// 6085 - Token price is lower than heuristic
    #[error("Token price is lower than heuristic")]
    PriceIsLowerThanHeuristic = 0x17C5,
    /// 6086 - Account different than expected
    #[error("Account different than expected")]
    AccountDifferentThanExpected = 0x17C6,
    /// 6087 - Swap amount below the minimum value
    #[error("Swap amount below the minimum value")]
    SwapAmountsTooSmall = 0x17C7,
    /// 6088 - Invalid dex program id
    #[error("Invalid dex program id")]
    InvalidDexProgramId = 0x17C8,
    /// 6089 - Strategy deposit is currently blocked
    #[error("Strategy deposit is currently blocked")]
    StrategyDepositBlocked = 0x17C9,
    /// 6090 - Strategy invest is currently blocked
    #[error("Strategy invest is currently blocked")]
    StrategyInvestBlocked = 0x17CA,
    /// 6091 - Strategy withdraw is currently blocked
    #[error("Strategy withdraw is currently blocked")]
    StrategyWithdrawBlocked = 0x17CB,
    /// 6092 - Vault swap can't be performed in the required direction
    #[error("Vault swap can't be performed in the required direction")]
    WrongSwapVaultDirection = 0x17CC,
    /// 6093 - Provided amount for vault swap is over the limit
    #[error("Provided amount for vault swap is over the limit")]
    SwapVaultsTooBig = 0x17CD,
    /// 6094 - Token out for cash based vault swap is below minimum expected
    #[error("Token out for cash based vault swap is below minimum expected")]
    SwapVaultsCashOutputBelowMinimum = 0x17CE,
    /// 6095 - Flash ixs initiated without the closing ix in the transaction
    #[error("Flash ixs initiated without the closing ix in the transaction")]
    FlashIxsNotEnded = 0x17CF,
    /// 6096 - Some unexpected instructions are present in the tx. Either before or after the flash ixs, or some ix target the same program between
    #[error("Some unexpected instructions are present in the tx. Either before or after the flash ixs, or some ix target the same program between")]
    FlashTxWithUnexpectedIxs = 0x17D0,
    /// 6097 - Some accounts differ between the two flash ixs
    #[error("Some accounts differ between the two flash ixs")]
    FlashIxsAccountMismatch = 0x17D1,
    /// 6098 - A scope ix is present in a flash tx
    #[error("A scope ix is present in a flash tx")]
    FlashIxsIncludeScope = 0x17D2,
    /// 6099 - Flash vault swap is blocked on this strategy
    #[error("Flash vault swap is blocked on this strategy")]
    FlashVaultSwapBlocked = 0x17D3,
    /// 6100 - Unexpected amount of tokens in ata prior flash vault swap (wrong amount_to_leave_to_user)
    #[error("Unexpected amount of tokens in ata prior flash vault swap (wrong amount_to_leave_to_user)")]
    FlashVaultSwapWrongAmountToLeave = 0x17D4,
    /// 6101 - Deposit amount less than minimal allowed
    #[error("Deposit amount less than minimal allowed")]
    DepositLessThanMinimum = 0x17D5,
    /// 6102 - Cannot deposit without invest
    #[error("Cannot deposit without invest")]
    DepositWithoutInvestDisallowed = 0x17D6,
    /// 6103 - Invalid Scope Chain
    #[error("Invalid Scope Chain")]
    InvalidScopeChain = 0x17D7,
    /// 6104 - Invalid Scope TWAP Chain
    #[error("Invalid Scope TWAP Chain")]
    InvalidScopeTWAPChain = 0x17D8,
    /// 6105 - Existent position has liquidity, new position creation is forbidden
    #[error("Existent position has liquidity, new position creation is forbidden")]
    PositionHasRemainingLiquidity = 0x17D9,
    /// 6106 - Deposit is not allowed as pool is rebalancing
    #[error("Deposit is not allowed as pool is rebalancing")]
    PoolRebalancing = 0x17DA,
    /// 6107 - Permissionless rebalancing is disabled
    #[error("Permissionless rebalancing is disabled")]
    PermissionlessRebalancingDisabled = 0x17DB,
    /// 6108 - Only the owner of the strategy can manually rebalance it
    #[error("Only the owner of the strategy can manually rebalance it")]
    ManualRebalanceInvalidOwner = 0x17DC,
    /// 6109 - Invalid rebalance type for the strategy
    #[error("Invalid rebalance type for the strategy")]
    InvalidRebalanceType = 0x17DD,
    /// 6110 - No rebalance necessary based on current rebalance type/parameters
    #[error("No rebalance necessary based on current rebalance type/parameters")]
    NoRebalanceNecessary = 0x17DE,
    /// 6111 - The given tick arrays do not match the rebalance result
    #[error("The given tick arrays do not match the rebalance result")]
    TickArraysDoNotMatchRebalance = 0x17DF,
    /// 6112 - Expected strategy position to be initialized
    #[error("Expected strategy position to be initialized")]
    StrategyPositionNotValid = 0x17E0,
    /// 6113 - Rebalance state could not be deserialized
    #[error("Rebalance state could not be deserialized")]
    CouldNotDeserializeRebalanceState = 0x17E1,
    /// 6114 - Rebalance state could not be serialized
    #[error("Rebalance state could not be serialized")]
    CouldNotSerializeRebalanceState = 0x17E2,
    /// 6115 - Rebalance params could not be deserialized
    #[error("Rebalance params could not be deserialized")]
    CouldNotDeserializeRebalanceParams = 0x17E3,
    /// 6116 - Deposit is not allowed as token amounts are not enough to match our holdings ratio
    #[error("Deposit is not allowed as token amounts are not enough to match our holdings ratio")]
    NotEnoughTokensForRatio = 0x17E4,
    /// 6117 - The provided amounts are too small
    #[error("The provided amounts are too small")]
    AmountsRepresentZeroShares = 0x17E5,
    /// 6118 - Rouding errors exceed the maximal loss tolerance
    #[error("Rouding errors exceed the maximal loss tolerance")]
    MaxLossExceeded = 0x17E6,
    /// 6119 - Reward does not match strategy token
    #[error("Reward does not match strategy token")]
    RewardNotStrategyToken = 0x17E7,
    /// 6120 - Decimal to u64 conversion failed
    #[error("Decimal to u64 conversion failed")]
    DecimalToU64ConversionFailed = 0x17E8,
    /// 6121 - Decimal operation failed
    #[error("Decimal operation failed")]
    DecimalOperationFailed = 0x17E9,
    /// 6122 - Deposit is not allowed as the strategy is not fully invested in the pool 
    #[error("Deposit is not allowed as the strategy is not fully invested in the pool ")]
    VaultBalancesCausesWrongSharesIssuance = 0x17EA,
    /// 6123 - Token cannot be used in strategy creation
    #[error("Token cannot be used in strategy creation")]
    TokenDisabled = 0x17EB,
    /// 6124 - Invalid reference price type
    #[error("Invalid reference price type")]
    InvalidReferencePriceType = 0x17EC,
    /// 6125 - Token amount to be swapped is not enough
    #[error("Token amount to be swapped is not enough")]
    TokenToSwapNotEnough = 0x17ED,
    /// 6126 - Token amount in ata is different than the expected amount
    #[error("Token amount in ata is different than the expected amount")]
    TokenAccountBalanceMismatch = 0x17EE,
    /// 6127 - Unexpected programID for prerequisite ix
    #[error("Unexpected programID for prerequisite ix")]
    UnexpectedProgramIdForPrerequisiteIx = 0x17EF,
    /// 6128 - Got an error from the dex specific function while computing the fees/rewards update
    #[error("Got an error from the dex specific function while computing the fees/rewards update")]
    ComputeFeesAndRewardsUpdateError = 0x17F0,
    /// 6129 - There must be no shares issued when closing a strategy
    #[error("There must be no shares issued when closing a strategy")]
    SharesNotZero = 0x17F1,
    /// 6130 - Invalid Scope staking rate Chain
    #[error("Invalid Scope staking rate Chain")]
    InvalidScopeStakingRateChain = 0x17F2,
    /// 6131 - Staking rate (provided by Scope) is not valid
    #[error("Staking rate (provided by Scope) is not valid")]
    StakingRateNotValid = 0x17F3,
    /// 6132 - Decimal to u128 conversion failed
    #[error("Decimal to u128 conversion failed")]
    DecimalToU128ConversionFailed = 0x17F4,
    /// 6133 - Decimal sqrt on negative number
    #[error("Decimal sqrt on negative number")]
    DecimalNegativeSqrtRoot = 0x17F5,
    /// 6134 - Drifting strategy is moving in the opposite direction
    #[error("Drifting strategy is moving in the opposite direction")]
    DriftingOppositeDirection = 0x17F6,
    /// 6135 - Wrong reward collateral_id
    #[error("Wrong reward collateral_id")]
    WrongRewardCollateralId = 0x17F7,
    /// 6136 - Collateral info already exists for given index
    #[error("Collateral info already exists for given index")]
    CollateralInfoAlreadyExists = 0x17F8,
    /// 6137 - Invest is too early after the position was opened
    #[error("Invest is too early after the position was opened")]
    InvestTooEarly = 0x17F9,
    /// 6138 - Swap uneven is too early after the position was opened
    #[error("Swap uneven is too early after the position was opened")]
    SwapUnevenTooEarly = 0x17FA,
    /// 6139 - Flash swap is too early after the position was opened
    #[error("Flash swap is too early after the position was opened")]
    FlashSwapTooEarly = 0x17FB,
    /// 6140 - Rebalance caps reached, no rebalances are allowed until the end of the current interval
    #[error("Rebalance caps reached, no rebalances are allowed until the end of the current interval")]
    RebalancesCapReached = 0x17FC,
    /// 6141 - Cannot swap uneven because authority is set and the given signer does not correspond
    #[error("Cannot swap uneven because authority is set and the given signer does not correspond")]
    SwapUnevenInvalidAuthority = 0x17FD,
    /// 6142 - Invalid tick requested
    #[error("Invalid tick requested")]
    InvalidTick = 0x17FE,
    /// 6143 - Meteora math overflowed
    #[error("Meteora math overflowed")]
    MeteoraMathOverflow = 0x17FF,
    /// 6144 - Expected strategy tick arrays to be initialized
    #[error("Expected strategy tick arrays to be initialized")]
    StrategyTickArrayNotValid = 0x1800,
    /// 6145 - Wrong event authority
    #[error("Wrong event authority")]
    WrongEventAuthority = 0x1801,
    /// 6146 - Strategy field update is not allowed
    #[error("Strategy field update is not allowed")]
    StrategyFieldUpdateNotAllowed = 0x1802,
    /// 6147 - DEX is not supported for this operation
    #[error("DEX is not supported for this operation")]
    UnsupportedDex = 0x1803,
    /// 6148 - Invalid BPS value provided
    #[error("Invalid BPS value provided")]
    InvalidBPSValue = 0x1804,
    /// 6149 - Reward vault override not allowed
    #[error("Reward vault override not allowed")]
    RewardVaultOverrideNotAllowed = 0x1805,
    /// 6150 - Got invalid reward from the dex specific function while computing the fees/rewards update
    #[error("Got invalid reward from the dex specific function while computing the fees/rewards update")]
    ComputeFeesAndRewardsInvalidReward = 0x1806,
    /// 6151 - No tokens to withdraw from treasury fee vault
    #[error("No tokens to withdraw from treasury fee vault")]
    EmptyTreasury = 0x1807,
    /// 6152 - New pool reward mint does not match the old pool reward mint
    #[error("New pool reward mint does not match the old pool reward mint")]
    ChangingPoolRewardMintMismatch = 0x1808,
    /// 6153 - The provided reward vault does not match the strategy state
    #[error("The provided reward vault does not match the strategy state")]
    ProvidedRewardVaultMismatch = 0x1809,
    /// 6154 - The provided reward vault does not match the strategy state
    #[error("The provided reward vault does not match the strategy state")]
    RepeatedMint = 0x180A,
    /// 6155 - The token extension is not supported by the program
    #[error("The token extension is not supported by the program")]
    UnsupportedTokenExtension = 0x180B,
    /// 6156 - Cannot initialize strategy with this dex while having a mint with token22
    #[error("Cannot initialize strategy with this dex while having a mint with token22")]
    UnsupportedDexForToken22 = 0x180C,
}

impl solana_program::program_error::PrintProgramError for YvaultsError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for YvaultsError {
    fn type_of() -> &'static str {
        "YvaultsError"
    }
}

